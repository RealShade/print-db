Компиляция контейнера

1. Создать .env файл на базе .env.sample
   Файл содержит название контейнера, размещение проекта (проектов) и доступы к БД. В большинстве случаев ничего менять не нужно.
2. Выполнить 01-build.sh
   Будет скомпилирован контейнер, если каталог ./config/container/mysq/mysql отсутствует (первый запуск после получения проекта) или не содержит файлов,
   то будет создана структура для работы mysql. Так же содержит некоторые действия, которые не будут выполнены в полученном из репозитория проекте.
   В случае успеха будут показаны действия по импорту кастомного рутового сертификата, которым подписаны деевелоперские домены, а так же строки для вставки в /etc/hosts

На этом этапе у вас запущен контейнер. Все дальнейшие шаги работают только с запущенным контейнером.

4. Выполнить 02-files.init.sh (на некоторых проектах он не нужен)
   Будут скопированы все необходимые начальные файлы, если прект содержит преднаполнение
5. Выполнить 03-mysql.init.sh
   Скрипт создаст базу данных, пользователя и раздаст права. А так же по надобности вольет преднаполнение и выполнит миграцию artisan, если она необходима

Структура

* Локальные каталоги с проектом (проектами) и базой данных монтируются в контейнер в /mnt/external/, а затем, с помощью bindfs, монтируются на свое место с необходимыми правами
* Логи nginx прокидываются в log
* Конфиги nginx, mysql, php и пр., биндятся в нужные места внутри контейнера
* Каталог с сертификатами доменов ./config/contailer/ssl монтируется в /var/www/ssl
* Все сертификаты созданы на базе кастомного CA сертификата, который находится в ./config/ssl и его нужно импортировать в браузер (см. п.2)

Скрипты

* run.sh - файл запуска внутри контейнера. Если по какой-то причине корнтейнер не стартует, смотреть логи docker logs <container name> и, при необходимости, убрать из run.sh запуск
  сервисов и, войдя в контейнер, запускать из вручную для обнаружения проблемы.
  !!!!!!!!!!! Не забыть вернуть run.sh в первоначальный вид !!!!!!!!!!
* up.sh - запуск контейнера. По-умолчанию запускает в консоли, с параметром -d запускает демоном
* down.sh - остановка контейнера